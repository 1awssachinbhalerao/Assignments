---
- name: AWS Management with Ansible
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Ensure awscli is installed
      pip:
        name: awscli
        state: present

    - name: List route tables in the availability zone ap-south-1b
      community.aws.ec2_vpc_route_table_facts:
        region: ap-south-1
        filters:
          availabilityZone: ap-south-1b
      register: route_tables

    - name: Display route tables
      debug:
        msg: "{{ route_tables.route_tables }}"

    - name: List subnets with tags 'web' or 'db'
      community.aws.ec2_vpc_subnet_facts:
        region: ap-south-1
      register: subnets

    - name: Filter subnets with tags 'web' or 'db'
      set_fact:
        filtered_subnets: >
          {{
            subnets.subnets | selectattr('tags', 'defined') | selectattr('tags', 'match', 'web|db') | list
          }}

    - name: Display filtered subnets
      debug:
        msg: "{{ filtered_subnets }}"
______________________________________________________________________________________________________

---
- name: AWS Management with Ansible
  hosts: localhost
  gather_facts: no
  vars:
    aws_access_key: YOUR_ACCESS_KEY
    aws_secret_key: YOUR_SECRET_KEY
    aws_session_token: YOUR_SESSION_TOKEN  # Optional, if using temporary credentials
    aws_region: us-east-1
  tasks:
    - name: Describe EC2 instances with uptime of at least 30 minutes
      community.aws.ec2_instance_facts:
        region: "{{ aws_region }}"
        filters:
          instance-state-name: running
      register: ec2_instances

    - name: Filter instances with uptime of at least 30 minutes
      set_fact:
        filtered_instances: >
          {{
            ec2_instances.instances | selectattr('launch_time', 'defined') | selectattr(
              'launch_time', 'search', '^.*?(\d+)$'
            ) | selectattr('launch_time', 'regex_replace', '^.*?(\d+)$', '\\1') | selectattr(
              'launch_time', 'regex_replace', '^.*?(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)$', '\\1'
            ) | selectattr('launch_time', 'version_compare', '<', (ansible_date_time.iso8601_basic | to_datetime('%Y%m%dT%H%M%S') - 1800)) | list
          }}

    - name: Display filtered EC2 instances
      debug:
        msg: "{{ filtered_instances }}"

    - name: Describe ELBs and display DNS names
      community.aws.elb_facts:
        region: "{{ aws_region }}"
      register: elbs

    - name: Display ELB DNS names
      debug:
        msg: "{{ elbs.load_balancers | map(attribute='DNSName') | list }}"

    - name: Describe Internet Gateways not attached to any VPC
      community.aws.ec2_internet_gateway_facts:
        region: "{{ aws_region }}"
      register: internet_gateways

    - name: Filter and display Internet Gateways not attached to any VPC
      set_fact:
        unattached_igws: >
          {{
            internet_gateways.internet_gateways | selectattr('attachments', 'defined') | selectattr('attachments', 'length', 0) | list
          }}

    - name: Display unattached Internet Gateways
      debug:
        msg: "{{ unattached_igws }}"
